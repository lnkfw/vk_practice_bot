import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import requests
import time
import random
import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
GROUP_ID = 231406471
TOKEN = "vk1.a.PzHqqXxe88F9IRrh_TKb-CXcpTtV5ue4W9ppsUvXcea1C2EWHmYUIZMNr9W42MlplRCxP6F-OsuBCWPFqvZvLmpXEG2gUkq0foxJME1ZAiF3Yv3pnk8xixS7zPyfXQwzhvBHwFVlRY7N_dPTultrjOLsUJ6HrKaTN5mSeubN4owooj0uznCT8FazgsF9vweGkWpWcewfE8ewqMPBlGbL4g"
VK_EDU_LINK = "https://vk.com/vkedu"

# –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π (FAQ)
FAQ = {
    "–ö—Ç–æ –º–æ–∂–µ—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å?": "–®–∫–æ–ª—å–Ω–∏–∫–∏, —Å—Ç—É–¥–µ–Ω—Ç—ã –±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç–∞, —Å–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç–∞, –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã –∏ –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã –≤—Å–µ—Ö –≤—É–∑–æ–≤ –†–æ—Å—Å–∏–∏, –∞ —Ç–∞–∫–∂–µ –Ω–∞—É—á–Ω—ã–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏.",
    "–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á?": "–î–∞, –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á.",
    "–ì–¥–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è?": "–í –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç–∏ –≤—ã–ø—É—Å–∫–Ω—ã—Ö –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç, –∫—É—Ä—Å–æ–≤—ã—Ö, –ù–ò–† –∏ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π.",
    "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ?": "–í—ã–±–µ—Ä–∏ –∑–∞–¥–∞—á—É, –ø—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é ‚Äî –∏ –ø–æ–ª—É—á–∏—à—å –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º.",
    "–ë—É–¥—É—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã?": "–î–∞, –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –≤—Å–µ—Ö —É—Å–ª–æ–≤–∏–π –∑–∞–¥–∞—á–∏.",
    "–ë—É–¥—É—Ç –æ—Ü–µ–Ω–∫–∏?": "–ù–µ—Ç, –Ω–æ —ç–∫—Å–ø–µ—Ä—Ç—ã –¥–∞–¥—É—Ç —Ä–µ—Ü–µ–Ω–∑–∏—é –Ω–∞ —Ö–æ—Ä–æ—à–∏–µ —Ä–µ—à–µ–Ω–∏—è.",
    "–û—Ç–∫—É–¥–∞ –∑–∞–¥–∞—á–∏?": "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –±–∏–∑–Ω–µ—Å-–∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –æ—Ç VK.",
    "–ö–æ–º—É –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å?": "–≠–∫—Å–ø–µ—Ä—Ç–∞–º –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä–∞—Ö –∏–ª–∏ –Ω–∞ –æ–±—É—á–∞—é—â–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.",
    "–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∑–∞–¥–∞—á–∏?": "–°–ª–µ–¥–∏ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ –±–∞–Ω–∫–µ –∑–∞–¥–∞—á VK."
}

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
def create_keyboard():
    keyboard = VkKeyboard(inline=True)
    questions = list(FAQ.keys())
    
    for i, question in enumerate(questions):
        keyboard.add_button(question, color=VkKeyboardColor.PRIMARY)
        if (i + 1) % 2 == 0 and i < len(questions) - 1:
            keyboard.add_line()
    
    keyboard.add_line()
    keyboard.add_button("–î—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å", color=VkKeyboardColor.SECONDARY)
    return keyboard.get_keyboard()

# –ù–∞–¥–µ–∂–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —á–µ—Ä–µ–∑ Google
def google_search(question):
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ VK
        query = f"{question} site:vk.com OR site:education.vk.com"
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
            'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7'
        }
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        time.sleep(1.5)
        response = requests.get(
            "https://www.google.com/search",
            params={'q': query, 'num': 3, 'hl': 'ru'},
            headers=headers
        )
        
        # –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –∫–∞–ø—á—É - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ä—É—á–Ω–æ–π –ø–æ–∏—Å–∫
        if "detected unusual traffic" in response.text:
            search_url = f"https://www.google.com/search?q={query}"
            return f"üîç –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:\n{search_url}"
        
        # –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç)
        results = []
        start = 0
        while len(results) < 3:
            start_idx = response.text.find('href="/url?q=', start)
            if start_idx == -1:
                break
            
            end_idx = response.text.find('&', start_idx + 14)
            if end_idx == -1:
                break
                
            url = response.text[start_idx + 14:end_idx]
            if url.startswith('http'):
                # –î–µ–∫–æ–¥–∏—Ä—É–µ–º URL
                url = requests.utils.unquote(url)
                results.append(url)
            
            start = end_idx
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if results:
            return "üîç –í–æ—Ç —á—Ç–æ —è –Ω–∞—à–µ–ª:\n" + "\n".join(results[:3]) + f"\n\n–¢–∞–∫–∂–µ –ø–æ—Å–µ—Ç–∏—Ç–µ: {VK_EDU_LINK}"
        
        return f"üîç –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n–†–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ—Å–µ—Ç–∏—Ç—å: {VK_EDU_LINK}"
    
    except Exception as e:
        return f"üîç –î–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ:\n{VK_EDU_LINK}/search?q={question}"

# –ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–∏—Å–∫
def hybrid_search(question):
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ FAQ
    for key in FAQ.keys():
        if question.lower() in key.lower():
            return FAQ[key]
    
    # –ó–∞—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ–º Google
    return google_search(question)

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK API
    vk_session = vk_api.VkApi(token=TOKEN)
    vk = vk_session.get_api()
    longpoll = VkBotLongPoll(vk_session, GROUP_ID)
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    print("–î–ª—è –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤—å—Ç–µ: –ø–æ–º–æ—â—å, –º–µ–Ω—é –∏–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫
    print("–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫:", hybrid_search("–ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤"))
    
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW:
            msg = event.object.message
            user_id = msg['from_id']
            text = msg['text']
            current_time = datetime.datetime.now().strftime("%H:%M:%S")
            print(f"[{current_time}] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {text}")
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
            if text.lower() in ["–ø–æ–º–æ—â—å", "–º–µ–Ω—é", "–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞", "start"]:
                vk.messages.send(
                    user_id=user_id,
                    message="–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–∑ –º–µ–Ω—é:",
                    keyboard=create_keyboard(),
                    random_id=0
                )
                continue
            
            # –û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–∏ FAQ
            if text in FAQ:
                vk.messages.send(
                    user_id=user_id,
                    message=FAQ[text],
                    keyboard=create_keyboard(),
                    random_id=0
                )
                continue
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            if text == "–î—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å":
                response = "–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º!"
            elif any(kw in text.lower() for kw in ["–º–æ–∂–Ω–æ –ª–∏", "–≤–æ–∑–º–æ–∂–Ω–æ –ª–∏", "–µ—Å—Ç—å –ª–∏", "–±—É–¥–µ—Ç –ª–∏"]):
                response = "–î–∞." if any(kw in text.lower() for kw in ["–º–æ–∂–Ω–æ", "–≤–æ–∑–º–æ–∂–Ω–æ", "–µ—Å—Ç—å", "–±—É–¥–µ—Ç"]) else "–ù–µ—Ç."
            else:
                response = hybrid_search(text)
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            vk.messages.send(
                user_id=user_id,
                message=response,
                keyboard=create_keyboard(),
                random_id=0
            )
            print(f"[{current_time}] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç")

if __name__ == '__main__':
    main()